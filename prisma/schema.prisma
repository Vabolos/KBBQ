datasource db {
    // Change provider to whichever provide you're using.
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider   = "prisma-client-js"
    engineType = "binary"
}

enum CommandType {
    TEXT_COMMAND
    APPLICATION_COMMAND
}

model Cooldown {
    userId      String
    commandName String

    expiresAt DateTime

    commandType CommandType

    @@id([commandName, commandType, userId])
    @@map("command_cooldowns")
}

model UserLanguage {
    userId     String @id
    languageId String

    @@map("user_languages")
}

model UserLevel {
    userId     String
    guildId    String
    experience Int
    level      Int

    @@id([userId, guildId])
    @@map("user_levels")
}

model WeeklyActivity {
    userId         String
    guildId        String
    currentWeek    String
    messages       Int
    minutesInVoice Int

    @@unique([userId, guildId, currentWeek])
    @@map("weekly_activity")
}

model Embed {
    embedName String
    guildId   String

    messagePayload    Json
    messageComponents MessageComponent[]

    @@id([embedName, guildId])
    @@map("embeds")
}

model MessageComponent {
    id       String @id @default(cuid())
    guildId  String
    url      String
    label    String
    position Int

    embedName String
    embed     Embed  @relation(fields: [embedName, guildId], references: [embedName, guildId])

    @@map("message_components")
}

model StatusRole {
    id           String  @id @default(cuid())
    guildId      String
    requiredText String
    roleId       String
    channelId    String?
    embedName    String?

    @@unique([guildId, roleId, requiredText])
    @@map("status_roles")
}

model WelcomeMessage {
    id        String @id @default(cuid())
    guildId   String
    channelId String
    embedName String
    expiry    Int?

    @@map("welcome_messages")
}
